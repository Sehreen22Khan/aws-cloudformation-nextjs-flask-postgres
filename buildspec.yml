version: 0.2

env:
  variables:
    AWS_ACCOUNT_ID: "${AWS_ACCOUNT_ID}"
    AWS_DEFAULT_REGION: "${AWS_DEFAULT_REGION}"
    ENVIRONMENT_NAME: "${ENVIRONMENT_NAME}"
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - cd frontend
      - echo Building the frontend Docker image...
      - docker build -t $ENVIRONMENT_NAME-frontend .
      - docker tag $ENVIRONMENT_NAME-frontend:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ENVIRONMENT_NAME-frontend-repo:latest
      - cd ../backend
      - echo Building the backend Docker image...
      - docker build -t $ENVIRONMENT_NAME-backend .
      - docker tag $ENVIRONMENT_NAME-backend:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ENVIRONMENT_NAME-backend-repo:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the frontend Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ENVIRONMENT_NAME-frontend-repo:latest
      - echo Pushing the backend Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ENVIRONMENT_NAME-backend-repo:latest
      - echo Writing image definitions file...
      - |
        printf '[{"name":"frontend","imageUri":"%s.dkr.ecr.%s.amazonaws.com/%s-frontend-repo:latest"},{"name":"backend","imageUri":"%s.dkr.ecr.%s.amazonaws.com/%s-backend-repo:latest"}]' \
        $AWS_ACCOUNT_ID $AWS_DEFAULT_REGION $ENVIRONMENT_NAME $AWS_ACCOUNT_ID $AWS_DEFAULT_REGION $ENVIRONMENT_NAME > imagedefinitions.json
      - echo Updating ECS services desired count...
      - aws ecs update-service --cluster $ENVIRONMENT_NAME-ecs-cluster --service $ENVIRONMENT_NAME-frontend-service --desired-count 2
      - aws ecs update-service --cluster $ENVIRONMENT_NAME-ecs-cluster --service $ENVIRONMENT_NAME-backend-service --desired-count 2
artifacts:
  files:
    - imagedefinitions.json
